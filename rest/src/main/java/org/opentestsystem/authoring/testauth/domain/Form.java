/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.domain;

import java.io.Serializable;
import java.util.List;

import javax.validation.constraints.Pattern;

import org.hibernate.validator.constraints.NotBlank;
import org.springframework.data.annotation.Transient;
import org.springframework.data.mongodb.core.index.CompoundIndex;
import org.springframework.data.mongodb.core.index.CompoundIndexes;
import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@Document
@JsonIgnoreProperties(ignoreUnknown = true)
@CompoundIndexes(value = { @CompoundIndex(name = "form_indx", def = "{'assessmentId':1, 'name':1}", unique = true) })
public class Form extends AssessmentChild implements Serializable, TenantedByAssessment {
    private static final long serialVersionUID = -7834224212277440335L;

    @NotBlank(message = "form.name.required")
    @Pattern(regexp = "[a-zA-Z0-9-]*", message = "form.name.alphanumeric")
    private String name;

    @NotBlank(message = "form.language.required")
    private String language;

    @Transient
    private List<FormPartition> partitions;

    public String getName() {
        return this.name;
    }

    public void setName(final String aName) {
        this.name = aName;
    }

    public String getLanguage() {
        return this.language;
    }

    public void setLanguage(final String aLanguage) {
        this.language = aLanguage;
    }

    public List<FormPartition> getPartitions() {
        return this.partitions;
    }

    public void setPartitions(final List<FormPartition> partitionList) {
        this.partitions = partitionList;
    }
}
