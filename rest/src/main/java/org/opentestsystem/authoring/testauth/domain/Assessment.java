/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.domain;

import java.io.Serializable;
import java.util.Arrays;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;
import org.hibernate.validator.constraints.NotBlank;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.data.annotation.Id;
import org.springframework.data.annotation.Transient;
import org.springframework.data.mongodb.core.index.CompoundIndex;
import org.springframework.data.mongodb.core.index.CompoundIndexes;
import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@Document
@JsonIgnoreProperties(ignoreUnknown = true)
@CompoundIndexes(value = { @CompoundIndex(name = "assessment_name_index", def = "{'name':1}", unique = true) })
public class Assessment implements Serializable, TenantedByAssessment {

    private static final long serialVersionUID = 7397841338479917679L;

    private static final int HUNDO = 100;
    private static final int THIRTY = 30;
    private static final int FIVE_THOUSAND = 5000;

    @Id
    private String id;
    @Size(min = 0, max = HUNDO, message = "testauth.assessment.comment.length")
    private String comment;
    @Size(min = 0, max = FIVE_THOUSAND, message = "testauth.assessment.description.length")
    private String description;

    @Size(min = 0, max = HUNDO, message = "testauth.assessment.testfamily.length")
    private String testFamily;

    @NotBlank(message = "testauth.tenant.required")
    private String tenantId;

    @NotEmpty(message = "testauth.grade.required")
    private String[] grade;

    private String name;

    @Size(min = 0, max = HUNDO, message = "testauth.assessment.label.length")
    @Pattern(regexp = "[a-zA-Z0-9-]*", message = "testauth.assessment.label.alphanumeric")
    private String label;

    @NotBlank(message = "testauth.publication.required")
    private String publicationId;

    @Transient
    private transient Publication publication;

    @NotBlank(message = "testauth.subject.required")
    private String subjectId;

    @Transient
    private transient Subject subject;

    @NotBlank(message = "testauth.administration.required")
    @Size(min = 0, max = THIRTY, message = "testauth.assessment.administration.length")
    @Pattern(regexp = "[a-zA-Z0-9-]*", message = "testauth.assessment.administration.alphanumeric")
    private String administration;

    @NotNull(message = "testauth.assessmenttype.required")
    private AssessmentType type;

    @NotNull(message = "testauth.assessmentversion.required")
    private String version;

    @NotNull(message = "testauth.assessmentstatus.required")
    private PublishingStatus status;

    @Size(min = 0, max = THIRTY, message = "testauth.assessment.category.length")
    private String category;

    private boolean blueprintSynced;
    private boolean locked;

    public String getId() {
        return this.id;
    }

    @Override
    public String getAssessmentId() {
        return getId();
    }

    public void setId(final String anId) {
        this.id = anId;
    }

    public String getComment() {
        return this.comment;
    }

    public void setComment(final String aComment) {
        this.comment = aComment;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(final String aDescription) {
        this.description = aDescription;
    }

    public String getTestFamily() {
        return this.testFamily;
    }

    public void setTestFamily(final String aTestFamily) {
        this.testFamily = aTestFamily;
    }

    public String getTenantId() {
        return this.tenantId;
    }

    public void setTenantId(final String aTenantId) {
        this.tenantId = aTenantId;
    }

    public String[] getGrade() {
        String[] rval = null;
        if (this.grade != null) {
            rval = Arrays.copyOf(this.grade, this.grade.length);
        }
        return rval;
    }

    public void setGrade(final String[] grades) {
        if (grades == null) {
            this.grade = null; // NOPMD
        } else {
            this.grade = Arrays.copyOf(grades, grades.length);
        }
    }

    public String getName() {
        return this.name;
    }

    public void setName(final String myName) {
        this.name = myName;
    }

    public String getLabel() {
        return this.label;
    }

    public void setLabel(final String aLabel) {
        this.label = aLabel;
    }

    public String getPublicationId() {
        return this.publicationId;
    }

    public void setPublicationId(final String aPublicationId) {
        this.publicationId = aPublicationId;
    }

    public Publication getPublication() {
        return this.publication;
    }

    public void setPublication(final Publication aPublication) {
        this.publication = aPublication;
    }

    public String getSubjectId() {
        return this.subjectId;
    }

    public void setSubjectId(final String aSubjectId) {
        this.subjectId = aSubjectId;
    }

    public Subject getSubject() {
        return this.subject;
    }

    public void setSubject(final Subject aSubject) {
        this.subject = aSubject;
    }

    public String getAdministration() {
        return this.administration;
    }

    public void setAdministration(final String aAdministration) {
        this.administration = aAdministration;
    }

    public AssessmentType getType() {
        return this.type;
    }

    public void setType(final AssessmentType aType) {
        this.type = aType;
    }

    public String getVersion() {
        return version;
    }

    public void setVersion(String version) {
        this.version = version;
    }

    public PublishingStatus getStatus() {
        return status;
    }

    public void setStatus(PublishingStatus status) {
        this.status = status;
    }

    public String getCategory() {
        return this.category;
    }

    public void setCategory(final String aCategory) {
        this.category = aCategory;
    }

    public boolean isBlueprintSynced() {
        return this.blueprintSynced;
    }

    public void setBlueprintSynced(final boolean aBlueprintSynced) {
        this.blueprintSynced = aBlueprintSynced;
    }

    public boolean isLocked() {
        return this.locked;
    }

    public void setLocked(final boolean aLocked) {
        this.locked = aLocked;
    }

    @Override
    public boolean equals(final Object obj) {
        return EqualsBuilder.reflectionEquals(this, obj);
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
    }

    @Override
    public int hashCode() {
        return HashCodeBuilder.reflectionHashCode(this);
    }
}
