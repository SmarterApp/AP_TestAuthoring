/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.persistence;

import org.opentestsystem.authoring.testauth.domain.Assessment;
import org.opentestsystem.authoring.testauth.domain.AssessmentCounter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.FindAndModifyOptions;
import org.springframework.data.mongodb.core.MongoOperations;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.data.mongodb.core.query.Update;

/**
 * Interface for AssessmentCounter mongoDb repository.
 */
public class AssessmentCounterRepositoryImpl implements AssessmentCounterRepositoryCustom {

    @Autowired
    private transient MongoOperations mongoOperations;

    @Override
    public long findAndUpdateNextAssessmentNameSequence(Assessment assessment) {
        Query query = new Query();
        query.addCriteria(Criteria.where("tenantId").is(assessment.getTenantId()));
        query.addCriteria(Criteria.where("coreStandardsPublisher").is(assessment.getPublication().getCoreStandardsPublisherKey()));
        query.addCriteria(Criteria.where("subjectAbbreviation").is(assessment.getSubject().getAbbreviation()));

        Update update = new Update();
        update.inc("sequence", 1);

        FindAndModifyOptions findAndModify = FindAndModifyOptions.options();
        findAndModify.upsert(true); // create new AssessmentCounter if query doesn't find anything
        findAndModify.returnNew(true); // return the AssessmentCounter after sequence gets updated

        AssessmentCounter counter = mongoOperations.findAndModify(query, update, findAndModify, AssessmentCounter.class);
        return counter.getSequence();
    }

}
