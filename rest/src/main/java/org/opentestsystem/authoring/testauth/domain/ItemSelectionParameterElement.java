/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.domain;

import java.io.Serializable;

import javax.validation.constraints.Size;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.google.common.collect.Ordering;

@JsonIgnoreProperties(ignoreUnknown = true)
public class ItemSelectionParameterElement implements Serializable {
    private static final long serialVersionUID = 5186905567348219885L;

    private static final int PARAM_NAME_LEN = 255;

    public static final Ordering<ItemSelectionParameterElement> BY_POSITION_ORDERING = new Ordering<ItemSelectionParameterElement>() {
        @Override
        public int compare(final ItemSelectionParameterElement element1, final ItemSelectionParameterElement element2) {
            return Integer.compare(element1.getPosition(), element2.getPosition());
        }
    };

    @Size(max = PARAM_NAME_LEN, message = "itemSelectionAlgorithm.parameters.itemSelectionList.name.length")
    private String name;
    private int position;

    public String getName() {
        return this.name;
    }

    public void setName(final String aName) {
        this.name = aName;
    }

    public int getPosition() {
        return this.position;
    }

    public void setPosition(final int aPosition) {
        this.position = aPosition;
    }

    @Override
    public boolean equals(final Object obj) {
        return EqualsBuilder.reflectionEquals(this, obj);
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
    }

    @Override
    public int hashCode() {
        return HashCodeBuilder.reflectionHashCode(this);
    }
}
