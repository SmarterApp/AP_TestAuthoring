#publication
publication.tenant.required=Tenant is required.
publication.subjectIds.required=At least one subject is required.
publication.subjectIds.invalid=Subject: {2} is invalid.
publication.subjectIds.tenant.invalid=Subject: {2} does not belong to the selected tenant.
publication.csPublisherKey.required=Core standards publisher is required.
publication.csSubjectKey.required=Core standards subject is required.
publication.csPublicationKey.required=Core standards publication is required.
publication.already.exists=Publication already exists in this tenant for Core Standards Publication: {0}.
publication.cannot.be.altered=Publication must contain all subjects that are already in use by one or more Assessments.
publication.search.invalidSearchCriteria=Invalid Publication search criteria.

#subject
subject.name.required=Subject name is required.
subject.abbreviation.required=Subject abbreviation is required.
subject.abbreviation.length=Subject abbreviation must be 3 characters or less.
subject.abbreviation.alphanumeric=Subject abbreviation must contain only letters and numbers.
subject.tenant.required=Valid subject tenant is required.
subject.already.exists=Subject already exists for name: {0} or abbreviation: {1}.
subject.on.assessment=Subject cannot be updated.  Already assigned to assessment.
subject.on.publication=Subject tenant cannot be updated.  Already assigned to a publication.
subject.invalid.id=Update Subject failed -- invalid id.
subject.description.length=Subject description must be 80 characters or less.

#itemSelectionAlgorithm
itemSelectionAlgorithm.invalid.id=Invalid Item Selection Algorithm ID.
itemSelectionAlgorithm.search.invalidSearchCriteria=Invalid Item Selection Algorithm search criteria.
itemSelectionAlgorithm.already.exists=Item Selection Algorithm already exists for name: {0} version: {1}.
itemSelectionAlgorithm.cannot.be.altered=Item Selection Algorithm cannot be altered; It is already assigned to a segment.
itemSelectionAlgorithm.name.required=Algorithm Name is required.
itemSelectionAlgorithm.name.length=Name can not be longer than {3} characters.
itemSelectionAlgorithm.version.required=Version is required.
itemSelectionAlgorithm.itemSelectionAlgorithmType.required=Algorithm Type is required.
itemSelectionAlgorithm.parameters.parameterName.required=Parameter Name is required.
itemSelectionAlgorithm.parameters.parameterName.length=Parameter Name can not be longer than {3} characters.
itemSelectionAlgorithm.parameters.parameterName.duplicates=Item Selection Algorithm Parameter List contains duplicates: {2}
itemSelectionAlgorithm.parameters.itemSelectionPurpose.required=Parameter Purpose is required.
itemSelectionAlgorithm.parameters.itemSelectionType.required=Parameter Type is required.
itemSelectionAlgorithm.parameters.itemSelectionType.invalid=Parameter Type is not a recognized value.
itemSelectionAlgorithm.parameters.description.length=Description can not be longer than {3} characters.
itemSelectionAlgorithm.parameters.defaultValue.required=Default Value is required.
itemSelectionAlgorithm.parameters.defaultValue.required.contains=Parameter {3} Default Value must be a value in the Item Selection List.
itemSelectionAlgorithm.parameters.defaultValue.length.max=Default Value can not be longer than {3} characters when parameter is of Type: {2}
itemSelectionAlgorithm.parameters.defaultValue.parseable.boolean=Parameter {3} Default Value must be a valid: {2}
itemSelectionAlgorithm.parameters.defaultValue.parseable.number=Parameter {3} Default Value must be a number of Type: {2}
itemSelectionAlgorithm.parameters.defaultValue.within.minmax=Parameter {3} Default Value must be within the Minimum and Maximum Value range for Type: {2}
itemSelectionAlgorithm.parameters.minimumValue.required.empty=Parameter {3} Minimum Value must be empty when parameter is of Type: {2}
itemSelectionAlgorithm.parameters.minimumValue.length=Minimum Value can not be longer than {3} characters.
itemSelectionAlgorithm.parameters.minimumValue.parseable.number=Parameter {3} Minimum Value must be a number of Type: {2}
itemSelectionAlgorithm.parameters.minimumValue.lessthan.max=Parameter {3} Minimum Value must be less than Maximum Value for Type: {2}
itemSelectionAlgorithm.parameters.maximumValue.required.empty=Parameter {3} Maximum Value must be empty when parameter is of Type: {2}
itemSelectionAlgorithm.parameters.maximumValue.length=Maximum Value can not be longer than {3} characters.
itemSelectionAlgorithm.parameters.maximumValue.parseable.number=Parameter {3} Maximum Value must be a number of Type: {2}
itemSelectionAlgorithm.parameters.position.invalid=Invalid parameter position: {2}
itemSelectionAlgorithm.parameters.position.duplicates=Item Selection Algorithm Parameter List contains duplicate position: {2}
itemSelectionAlgorithm.parameters.position.min=Item Selection Algorithm Parameter position must have a value of 1 or higher.
itemSelectionAlgorithm.parameters.itemSelectionList.required=Parameter {3} At least one Parameter List Value is required when parameter is of Type: {2}
itemSelectionAlgorithm.parameters.itemSelectionList.required.empty=Parameter {3} Parameter List must not be empty when parameter is of Type: {2}
itemSelectionAlgorithm.parameters.itemSelectionList.name.required=Parameter {3} Item Selection Algorithm Parameter List Element name is required.
itemSelectionAlgorithm.parameters.itemSelectionList.name.length=List Element name can not be longer than {3} characters.
itemSelectionAlgorithm.parameters.itemSelectionList.name.duplicates=Item Selection AlgorithmParameter List contains duplicates: {2}
itemSelectionAlgorithm.parameters.itemSelectionList.position.duplicates=Parameter {3} List contains duplicate position: {2}
itemSelectionAlgorithm.parameters.itemSelectionList.position.invalid=Parameter {3} Invalid List Element position: {2}

#computationRule
computationRule.invalid.id=Invalid Scoring Function ID.
computationRule.search.invalidSearchCriteria=Invalid Scoring Function search criteria.
computationRule.already.exists=Scoring Function already exists for identifier: {0} version: {1}.
computationRule.cannot.be.altered=Scoring function cannot be altered; It is already assigned to a scoring rule.
computationRule.name.required=Scoring Function Name is required.
computationRule.name.length=Scoring Function Name cannot exceed 60 characters.
computationRule.version.required=Version is required.
computationRule.version.length=Scoring Function Version cannot exceed 60 characters.
computationRule.conversionTableType.required=Conversion Table choice is required.
computationRule.parameters.description.length=Description can not be longer than {3} characters.
computationRule.parameters.parameterName.required=Parameter Name is required.
computationRule.parameters.parameterName.length=Scoring Function Parameter Name cannot exceed 60 characters.
computationRule.parameters.parameterName.duplicates=Scoring Function Parameter List contains duplicates: {2}
computationRule.parameters.position.invalid=Invalid parameter position: {2}
computationRule.parameters.position.duplicates=Scoring Function Parameter List contains duplicate position: {2}
computationRule.parameters.position.min=Scoring Function Parameter position must have a value of 1 or higher.
computationRule.parameters.computationRuleType.required=Parameter Type is required.
computationRule.parameters.computationRuleType.invalid=Parameter Type is not a recognized value.
computationRule.parameters.defaultValue.length=Default Value cannot exceed maximum length of {3}.
computationRule.parameters.defaultValue.length.max=Default Value cannot exceed maximum length of {3} when parameter is of Type: {2}
computationRule.parameters.defaultValue.parseable.boolean=Parameter {3} Default Value must be a boolean value.
computationRule.parameters.defaultValue.parseable.number=Parameter {3} Default Value must be a number of Type: {2}
computationRule.parameters.defaultValue.within.minmax=Parameter {3} Default Value must be within the Minimum and Maximum Value range for Type: {2}
computationRule.parameters.minimumValue.required.empty=Parameter {3} Minimum Value must be empty when parameter is of Type: {2}
computationRule.parameters.minimumValue.parseable.number=Parameter {3} Minimum Value must be a number of Type: {2}
computationRule.parameters.minimumValue.length=Minimum Value cannot exceed maximum length of {3}.
computationRule.parameters.minimumValue.lessthan.max=Parameter {3} Minimum Value must be less than Maximum Value for Type: {2}
computationRule.parameters.maximumValue.required.empty=Parameter {3} Maximum Value must be empty when parameter is of Type: {2}
computationRule.parameters.maximumValue.length=Maximum Value cannot exceed maximum length of {3}.
computationRule.parameters.maximumValue.parseable.number=Parameter {3} Maximum Value must be a number of Type: {2}
computationRule.parameters.computationRuleMultiplicityType.required=Multiplicity is required.
computationRule.parameters.dictionaryIndexType.required=Dictionary Index Type is required.

#assessment
assessment.restricted.field.cannot.be.altered=Restricted fields (subject/publication/grade/tenant/version) cannot be altered on an existing assessment. 
testauth.subject.required=Subject is required.
testauth.administration.required=Administration is required.
testauth.assessmenttype.required=Type is required.
testauth.assessmentversion.required=Version is required.
testauth.assessmentstatus.required=Status is required.
testauth.publisher.required=Publisher is required.
testauth.itemPool.required=Item pool is required.
testauth.version.required=Version number is required.
testauth.purpose.required=Purpose is required.
testauth.publication.required=Publication is required.
testauth.grade.required=Grade is required.
testauth.tenant.required=An assessment must be assigned to a tenant.
assessment.invalid.id=Invalid Assessment ID.
assessment.search.invalidSearchCriteria=Invalid Search Criteria -- Tenant is required.
assessment.publication.cannot.be.altered=Publication cannot be altered for this Assessment; Blueprint elements already exist.
assessment.published.cannot.be.altered=Assessment cannot be altered: locked for publishing.
assessment.published.cannot.be.removed=Previously published assessments cannot be deleted.
assessment.published.cannot.be.republished=Assessment cannot be published: locked for publishing.
assessment.must.be.published=Cannot upload psychometric results to an unpublished assessment.
assessment.already.exists=Assessment already exists for name: {0}; version {1}.
testauth.assessment.administration.length=Administration maximum length is {3} characters.
testauth.assessment.administration.alphanumeric=Administration valid characters only (letters/numbers/hyphen).
testauth.assessment.testfamily.length=Test Family maximum length is {3} characters.
testauth.assessment.label.length=Label maximum length is {3} characters.
testauth.assessment.label.alphanumeric=Label valid characters only (letters/numbers/hyphen).
testauth.assessment.category.length=Category maximum length is {3} characters.
testauth.assessment.description.length=Description maximum length is {3} characters.
testauth.assessment.comment.length=Comment maximum length is {3} characters.

#segment
segment.already.exists=Segment already exists for the given assessment with label: {0}
segment.invalid.id=Invalid Segment ID.
segment.invalid.position=Segment can not have position: {2}
segment.required=At least one Segment is required per Assessment.
segment.label.required=Segment label is required.
segment.label.length=Segment label can not be longer than {3} characters.
segment.position.required=Segment position is required and must be a value of 1 or higher.
segment.position.invalid=Segment position value must be sequentially incremented with no gaps.
segment.minOpItems.required=Segment OP Min Items value must be 0 or higher.
segment.minOpItems.range=Segment OP Min Items value must be 0-999.
segment.minOpItems.fieldTest.nonzero=Field test segment OP Min Items value must be 0.
segment.maxOpItems.required=Segment OP Max Items value must be 0 or higher.
segment.maxOpItems.range=Segment OP Max Items value must be 0-999.
segment.maxOpItems.fieldTest.nonzero=Field test segment OP Max Items value must be 0.
segment.minFtItems.required=Segment FT Min Items value must be 0 or higher.
segment.minFtItems.range=Segment FT Min Items value must be 0-999.
segment.maxFtItems.required=Segment FT Max Items value must be 0 or higher.
segment.maxFtItems.range=Segment FT Max Items value must be 0-999.
segment.min.le.max=Segment {2} Min Items value ({3}) cannot be more than {4} Max Items value ({5}).
segment.itemSelectionAlgorithmId.required=Segment Item Selection Algorithm is required.
segment.itemSelectionAlgorithmId.invalid=Segment Item Selection Algorithm is invalid or does not exist.
segment.itemSelectionParameters.count=Segment Item Selection Algorithm requires exactly {2} parameters.
segment.itemSelectionParameters.type.not.recognized=Item Selection Parameter is of invalid Type: {2}
segment.itemSelectionParameters.required=Item Selection Parameter value is required.
segment.itemSelectionParameters.invalid=Item Selection Parameter value must be of Type: {2}
segment.itemSelectionParameters.invalid.selection=Item Selection Parameter value is not a valid selection from the list.
segment.itemSelectionParameters.length.max=Item Selection Parameter value exceeds maximum length of {2} characters.
segment.itemSelectionParameters.parseable.number=Item Selection Parameter value must be a number of Type: {2}
segment.itemSelectionParameters.out.of.range=Item Selection Parameter value {3} falls outside the range constraints {6} declared in the algorithm parameter for Type: {2}
segment.cannot.alter.itemSelectionAlgorithm.type=Cannot change the Item Selection Algorithm Type ({0}) already selected for this segment.

#blueprintElement
blueprintElement.invalid.id=Invalid blueprintElement ID.
blueprintElement.search.invalidsearchcriteria=Invalid BlueprintElement search criteria.
blueprintElement.already.exists=BlueprintElement already exists for the given assessment + standardKey + grade.
blueprintElement.listhasduplicates=A BlueprintElement in the list already exists.
blueprintElement.standard.required=Standard Key is required.
blueprintElement.level.required=Level is required.
blueprintElement.grade.required=Grade is required.
blueprintElement.blueprintElementValueMap.count=Incorrect number of blueprint element values: {2}.  There are {3} segments on the assessment.
blueprintElement.blueprintElementValueMap.segment.invalid=Blueprint Element does not contain values for segment: {2}
blueprintElement.blueprintElementValueMap.operationalItemMinValue.required=Operational Item Min value is required.
blueprintElement.blueprintElementValueMap.operationalItemMinValue.range=Operational Item Min value must be 0-999.
blueprintElement.blueprintElementValueMap.operationalItemMaxValue.required=Operational Item Max value is required.
blueprintElement.blueprintElementValueMap.operationalItemMaxValue.range=Operational Item Max value must be 0-999.
blueprintElement.blueprintElementValueMap.fieldTestItemMinValue.required=Field Test Item Min value is required.
blueprintElement.blueprintElementValueMap.fieldTestItemMinValue.range=Field Test Item Min value must be 0-999.
blueprintElement.blueprintElementValueMap.fieldTestItemMaxValue.required=Field Test Item Max value is required.
blueprintElement.blueprintElementValueMap.fieldTestItemMaxValue.range=Field Test Item Max value must be 0-999.
blueprintElement.blueprintElementValueMap.itemSelectionParameters.count=Blueprint Item Selection Algorithm requires exactly {2} parameters.
blueprintElement.blueprintElementValueMap.itemSelectionParameters.type.not.recognized=Blueprint Parameter is of invalid Type: {2}
blueprintElement.blueprintElementValueMap.itemSelectionParameters.required=Blueprint Parameter value is required.
blueprintElement.blueprintElementValueMap.itemSelectionParameters.invalid=Blueprint Parameter value must be of Type: {2}
blueprintElement.blueprintElementValueMap.itemSelectionParameters.invalid.selection=Blueprint Parameter value is not a valid selection from the list.
blueprintElement.blueprintElementValueMap.itemSelectionParameters.length.max=Blueprint Parameter value exceeds maximum length of {2} characters.
blueprintElement.blueprintElementValueMap.itemSelectionParameters.parseable.number=Blueprint Parameter value must be a number of Type: {2}
blueprintElement.blueprintElementValueMap.itemSelectionParameters.out.of.range=Blueprint Parameter value {3} falls outside the range constraints {6} declared in the algorithm parameter for Type: {2}

#itemgroup
itemgroup.itemgrouplocation.required=Location is required.
itemgroup.groupname.required=Name is required.
itemgroup.maxresponses.required=Max Responses is required.
itemgroup.maxitems.required=Max Items is required.
itemgroup.position.required=Position is required.
itemgroup.maxresponses.nonnegative=Max responses can not be less than zero.
itemgroup.maxitems.nonnegative=Max items can not be less than zero.
itemGroup.already.exists=Item Group already exists in desired location.

#item
item.assessmentid.required=Assessment ID is required.
item.tibIdentifier.required=Identifier is required.
item.version.required=Version is required.
item.grade.required=Grade is required.
item.search.invalidsearchcriteria=Invalid Item search criteria.
item.invalid.id=Invalid Item ID.
item.already.exists=Item already exists for id: {0}.
item.listhasduplicates=An Item in the list already exists.
invalid.item.location=Unable to update item -- item location does not exist.
item.not.on.partition=Item not found on form partition
item.not.on.segment=Item not found in segment pool
item.count.exceeds.limit=Cannot import additional items into this assessment as the it would exceed the specified maximum limit of {0} items.
item.op.statuses.empty=Item OP Statuses from Program Management are not set.

#enemy
enemy.invalid.id=Invalid Enemy ID.
enemy.already.exists=Items are already enemies for this assessment.
enemy.search.invalidsearchcriteria=Invalid Enemy search criteria.
enemy.cannot.be.enemy.of.self=Item can not be an enemy of itself.
enemy.group.cannot.be.enemy.of.self=Item Group can not be an enemy of itself.  
enemy.objectId1.required=Item 1 is required.
enemy.objectId1.invalid=Item 1 does not reference a valid Item/Item Group/Passage.
enemy.objectType1.required=Item Type 1 is required.
enemy.objectType1.not.recognized=Item Type 1 is not recognized.
enemy.objectId2.required=Item 2 is required.
enemy.objectId2.invalid=Item 2 does not reference a valid Item/Item Group/Passage.
enemy.objectType2.required=Item Type 2 is required.
enemy.objectType2.not.recognized=Item Type 2 is not recognized.

#itemMetadataConfig
itemMetadataConfig.search.invalidSearchCriteria=Invalid Item metadata selection data search criteria.
itemMetadataConfig.temMetadataReckonSet.notfound=Invalid metadata field(s).
itemMetadataConfig.already.exists=Item metadata selection data already exists.

#form
form.name.required=Name is required.
form.name.alphanumeric=Name can only contain alphanumeric characters.
form.language.required=Language is required.
form.language.invalid = Invalid language code.
form.invalid.id=Invalid Form ID.
form.already.exists=Form already exists for assessment ID: {0} name: {1}.
form.search.invalidSearchCriteria=Invalid Form search criteria.

#formPartition
formPartition.formId.required=Form ID is required.
formPartition.segmentId.required=Segment name is required.
formPartition.name.required=Name is required.
formPartition.invalid.id=Invalid Form Partition ID.
formPartition.already.exists.segment=Form Partition already exists in this form for segment ID: {1}
formPartition.already.exists.name=Form Partition already exists in this form for name: {1}
formPartition.formId.notfound=Form ID could not be found.
formPartition.segmentId.notfound=Segment could not be found for Segment ID {2}.
formPartition.segmentId.notfixed=Segment selected for this form partition is not a fixed form segment.
formPartition.search.invalidSearchCriteria=Invalid Form Partition search criteria.

#scoringRule
scoringRule.invalid.id=Invalid Scoring Rule ID.
scoringRule.search.invalidSearchCriteria=Invalid Scoring Rule search criteria.
scoringRule.already.exists.order=Scoring Rule already exists in this assessment for order: {1}
scoringRule.already.exists.label=Scoring Rule already exists in this assessment for label: {1}
scoringRule.order.required=Order is required.
scoringRule.order.min=Order must be value of 1 or higher.
scoringRule.order.exceed=Order value exceeds the maximum allowable value of {2}.
scoringRule.label.required=Label is required.
scoringRule.computationRuleId.required=Scoring Function is required.
scoringRule.blueprintDenotationType.required=BP Denotation Type is required.
scoringRule.blueprintReferenceId.not.active=BP Reference specified is not active.
scoringRule.blueprintReferenceId.assessmentId.mismatch=Assessment ID in BP Reference does not match the Assessment ID of the scoring rule.
scoringRule.blueprintReferenceId.level.invalid=BP Reference level specified was not found within Assessment.
scoringRule.blueprintReferenceId.notempty=BP Reference ID is not allowed for scoring rules defined for Leaf Nodes.
scoringRule.conversionTableFile.header.invalue=Conversion Table File of type {1} filename {0} does not begin with a header row column value of INVALUE.
scoringRule.conversionTableFile.header.outvalue=Conversion Table File of type {1} filename {0} does not contain a header row column value of OUTVALUE immediately following the INVALUE column.
scoringRule.conversionTableFile.blank.invalue=Conversion Table File of type {1} filename {0} contains one or more blank/empty INVALUE values.
scoringRule.conversionTableFile.blank.outvalue=Conversion Table File of type {1} filename {0} contains one or more blank/empty OUTVALUE values.
scoringRule.conversionTableFile.unparseable=Conversion Table File of type {1} filename {0} is not a comma-separated value formatted file.
scoringRule.conversionTableFile.ioexception=An error occurred while attempting to process Conversion Table File of type {1} filename {0}.
scoringRule.conversionTableFile.closeexception=An error occurred while attempting to close Conversion Table File of type {1} filename {0}.
scoringRule.valueConversionTableGridFsId.file.not.found=Value Conversion Table file not found.
scoringRule.valueConversionTableGridFsId.required=Value Conversion Table required.
scoringRule.valueConversionTableGridFsId.required.empty=Value Conversion Table is not allowed.
scoringRule.standardErrorConversionTableGridFsId.file.not.found=Standard Error Conversion Table file not found.
scoringRule.standardErrorConversionTableGridFsId.required=Standard Error Conversion Table required.
scoringRule.standardErrorConversionTableGridFsId.required.empty=Standard Error Conversion Table is not allowed.
scoringRule.standardErrorConversionTableGridFsId.length=Standard Error Conversion Table file length of {3} does not match length of Value Conversion Table file length of {2}.
scoringRule.parameters.required=Parameter Data cannot be empty.
scoringRule.parameters.computationRuleType.not.recognized=Computation Rule Type of ScoringFunctionParameter is not recognized.
scoringRule.parameters.computationRuleParameterName.missing=Scoring Rule Parameter List is missing Scoring Function Parameter(s): {2}.
scoringRule.parameters.computationRuleParameterName.duplicates=Scoring Rule Parameter List cannot contain duplicate parameter names: {2}.
scoringRule.parameters.computationRuleParameterName.not.found=Scoring Rule Parameter List contains an entry not found in the corresponding Scoring Function Parameter List {2}.
scoringRule.parameters.computationRuleParameterName.required=Parameter Name is required.
scoringRule.parameters.computationRuleParameterName.length=Parameter Name exceeds maximum length.
scoringRule.parameters.computationRuleParameterMultiplicity.required=Multiplicity is required.
scoringRule.parameters.scalarValue.required=Parameter {3} requires non-empty data of Type: {2}.
scoringRule.parameters.scalarValue.parseable.number=Parameter {3} value {4} invalid -- must be a number of Type: {2}.
scoringRule.parameters.scalarValue.number.outofrange=Parameter {3} value {4} is outside of the range constraints of {5} - {6} declared in the corresponding Scoring Function for Type: {2}.
scoringRule.parameters.scalarValue.length.max=Parameter {3} value {4} cannot exceed maximum length of {5}.
scoringRule.parameters.scalarValue.parseable.boolean=Parameter {3} value {4} invalid -- must be a boolean (true or false) value.
scoringRule.parameters.dictionaryValue.value.parseable.boolean=Parameter Data {3} row {4} value {5} invalid -- must be a boolean (true or false) value.
scoringRule.parameters.dictionaryValue.required=Parameter {3} requires at least one row of non-empty data of Type: {2}.
scoringRule.parameters.dictionaryValue.duplicates=Parameter {2} cannot contain duplicate keys {3}.
scoringRule.parameters.dictionaryValue.key.required=Parameter Data {3} row {4} key is required.
scoringRule.parameters.dictionaryValue.key.invalid=Parameter Data {3} row {4} key is invalid; key must be a number of Type: {5}.
scoringRule.parameters.dictionaryValue.key.length.max=Parameter Data {3} row {4} key cannot exceed maximum length of {5}.
scoringRule.parameters.dictionaryValue.value.required=Parameter {3} row {4} value must be non-empty data of Type: {2}.
scoringRule.parameters.dictionaryValue.value.parseable.number=Parameter Data {3} row {4} value {5} invalid -- must be a number of Type: {2}.
scoringRule.parameters.dictionaryValue.value.number.outofrange=Parameter Data {3} row {4} value {1} is outside of the range constraints of {5} - {6} declared in the corresponding Scoring Function for Type: {2}.
scoringRule.parameters.dictionaryValue.value.length.max=Parameter Data {3} row {4} value cannot exceed maximum length of {5}.
scoringRule.validation.requires.function.param=ScoringRuleParameter validation must use the SmartValidator validate method which expects ScoringFunctionParameter data.

#performanceLevel
performanceLevel.invalid.id=Invalid Performance Level ID.
performanceLevel.search.invalidSearchCriteria=Invalid Performance Level search criteria.
performanceLevel.already.exists=Performance Level already exists for BP Reference: {0}
performanceLevel.performanceLevelValues.size=Performance Level must have at least 2 levels.
performanceLevel.performanceLevelValues.level.required=Level is required.
performanceLevel.performanceLevelValues.level.min=Level must be value of 1 or higher.
performanceLevel.performanceLevelValues.level.invalid=Invalid level: {2}
performanceLevel.performanceLevelValues.level.duplicates=Blueprint Reference contains duplicate performance levels: {2}
performanceLevel.performanceLevelValues.scaledLo.required=Scaled Lo is required.
performanceLevel.performanceLevelValues.scaledLo.max=Scaled Lo can not exceed 19 digits.
performanceLevel.performanceLevelValues.scaledLo.min=Scaled Lo must be greater than or equal to 0.
performanceLevel.performanceLevelValues.scaledLo.lessthan.max=Scaled Lo must be less than Scaled Hi.
performanceLevel.performanceLevelValues.scaledLo.invalid=Scaled Lo must be a valid number.
performanceLevel.performanceLevelValues.scaledHi.required=Scaled Hi is required.
performanceLevel.performanceLevelValues.scaledHi.max=Scaled Hi can not exceed 19 digits.
performanceLevel.performanceLevelValues.scaledHi.min=Scaled Hi must be greater than or equal to 0.
performanceLevel.performanceLevelValues.scaledHi.invalid=Scaled Hi must be a valid number.

#reporting measure
reportingMeasure.scoringRuleIdList.required=At least one Scoring Rule must be selected.
reportingMeasure.scoringRuleIdList.mismatch=Scoring Rule {2} is not defined to the same Blueprint Reference as the Reporting Measure (Type of {3} and ID {4}) within the Assessment (ID:{5}).
reportingMeasure.invalid.id=Invalid Reporting Measure ID.
reportingMeasure.already.exists=Reporting Measure already exists for blueprint reference: {0} of type: {1}.
reportingMeasure.search.invalidSearchCriteria=Invalid Reporting Measure search criteria.
reportingMeasure.scoringRuleIdList.invalid=One or more of the scoring rule IDs passed with this reporting measure do not exist on the database.

#publishing
publishingRecord.invalid.id=Invalid Publishing Record ID.
publishingRecord.initial.data.missing=Initial Publishing Record data not created.
publishingRecord.publishingStatus.mismatch=Publishing Status submitted {0} does not match current saved Publishing Status {1}.
publishingRecord.search.invalidSearchCriteria=Invalid Publishing Record search criteria.
publishingRecord.testspec.unsupported.spec.type=Specification Type is not currently supported - {0}.
publishingRecord.testspec.xml.marshal=Error occurred while processing Test Specification to be published: {0}.
publishingRecord.testspec.unexpected.response=Error occurred while publishing Assessment to the Test Specification Bank: {0}.
publishingRecord.testspec.xml.invalid=Error occurred while generating Test Specification XML: {0}.
publishingRecord.testspec.xml.marshaller=Error occurred while setting up Test Specification builder: {0}.
publishingRecord.testspec.xml.compress.error=Error occurred while compressing XML to send to Test Spec Bank.
publishingRecord.no.eligible.spec.types=Cannot take publishing action when there are no eligible specification types for the assessment.
publishingRecord.testspec.tenant.retrieval.failed=Error occurred while processing Test Specification to be published: {0}.
publishingRecord.testspec.form.invalid=Error occurred while processing the form for Test Specification XML: {0}.
publishingRecord.segment.empty.cannot.be.published=Segment data is required.
publishingRecord.blueprint.empty.cannot.be.published=Blueprint data is required.  Matching blueprints for this assessment's grade(s) need to be added.
publishingRecord.validation.error={0} data validation error: {1}
publishingRecord.fixedformsegment.form.required=Fixed form segments require at least one form.
publishingRecord.segment.formPartition.unequal=The number of segments and form partitions do not match. 
publishingRecord.formPartition.items.required=Item data for partition {0} is required.
publishingRecord.segment.items.required=Item data for segment {0} is required.
publishingRecord.performancelevel.required=Performance Level data is required.
publishingRecord.scoringrule.required=Scoring Rule data is required.
publishingRecord.reportingmeasure.required=Reporting Measure data is required.
publishingRecord.conversionTableFile.unparseable=Conversion Table File of type {1} for Scoring Rule {0} is not a comma-separated value formatted file.
publishingRecord.conversionTableFile.ioexception=An error occurred while attempting to process Conversion Table File of type {1} for Scoring Rule {0}.
publishingRecord.conversionTableFile.closeexception=An error occurred while attempting to close Conversion Table File of type {1} for Scoring Rule {0}.
publishingRecord.invalid.user=You are not authorized to perform this action.

#approval
approval.publishRecord.required=Publishing record is required.
approval.status.required=Status is required.
approval.permission.required=Permission is required.
approval.permissionLabel.required=Permission Label is required.
approval.username.required=Username is required.
approval.message.required=Message is required.
approval.search.invalidSearchCriteria=Invalid Approval search criteria.
approval.approve.notAuthorized=You are not authorized to approve / reject this request.
approval.approve.canBeApproved=This request cannot be approved / rejected until the lower levels are done approving.
approval.approve.canBeEdited=This request cannot be approved / rejected in its current status.
approval.initial.data.missing=Initial Approval data not created.

#psychometricrecord
psychometricRecord.publicationRecordId.required=PublicationRecord ID is required.
psychometricRecord.fileName.required=File name is required.
psychometricRecord.search.invalidSearchCriteria=Invalid Psychometric Record search criteria.
psychometricRecord.file.notFound=Psychometric file was not found.
psychometricRecord.upload.type.not.supported=The file type you are trying to upload is unsupported.
psychometricRecord.search.multipleRecords=There were multiple psychometric records found for your assessment.

#simulationrecord
simulationRecord.fileName.required=File name is required.
simulationRecord.search.invalidSearchCriteria=Invalid Simulation Record search criteria.
simulationRecord.file.notFound=Simulation file was not found.
simulationRecord.upload.type.not.supported=The file type you are trying to upload is unsupported.
simulationRecord.search.multipleRecords=There were multiple simulation records found for your assessment.

#filegroup
fileGroup.name.required=Group Name is required.
fileGroup.gridFile.required=At least one file upload is required.
fileGroup.search.invalidSearchCriteria=Invalid File Group search criteria.
fileGroup.cannot.remove.simulation=Cannot remove simulation file group after publishing.
fileGroup.cannot.remove.psychometric=Cannot remove psychometric file group before publishing.

#affinityGroup
affinityGroup.search.invalidsearchcriteria==Invalid Search Criteria -- Tenant is required.
affinityGroup.already.exists=An Affinity Group already exists for that Group Name/SOCK.
affinityGroup.listhasduplicates=An Affinity Group in the list already exists.
affinityGroup.id.invalid=No Affinity Group with the given ID exists.
affinityGroup.id.required=ID is required.
affinityGroup.groupName.required=Name is required.
affinityGroup.affinityGroupValueMap.count=Incorrect number of affinity group values: {2}.  There are {3} segments on the assessment.
affinityGroup.affinityGroupValueMap.segment.invalid=Affinity Group does not contain values for segment: {2}
affinityGroup.affinityGroupValueMap.operationalItemMinValue.required=Operational Item Min value is required.
affinityGroup.affinityGroupValueMap.operationalItemMinValue.range=Operational Item Min value must be 0-999.
affinityGroup.affinityGroupValueMap.operationalItemMaxValue.required=Operational Item Max value is required.
affinityGroup.affinityGroupValueMap.operationalItemMaxValue.range=Operational Item Max value must be 0-999.
affinityGroup.affinityGroupValueMap.operationalItemMaxValue.lessthanmin=Operational Item Min ({2}) must not be greater than the Operational Item Max value ({3}).
affinityGroup.affinityGroupValueMap.fieldTestItemMinValue.required=Field Test Item Min value is required.
affinityGroup.affinityGroupValueMap.fieldTestItemMinValue.range=Field Test Item Min value must be 0-999.
affinityGroup.affinityGroupValueMap.fieldTestItemMaxValue.required=Field Test Item Max value is required.
affinityGroup.affinityGroupValueMap.fieldTestItemMaxValue.range=Field Test Item Max value must be 0-999.
affinityGroup.affinityGroupValueMap.fieldTestItemMaxValue.lessthanmin=Field Test Item Min ({2}) must not be greater than the Field Test Item Max value ({3}).
affinityGroup.affinityGroupValueMap.itemSelectionParameters.count=Segment Item Selection Algorithm requires exactly {2} parameters.
affinityGroup.affinityGroupValueMap.itemSelectionParameters.type.not.recognized=Item Selection Parameter is of invalid Type: {2}
affinityGroup.affinityGroupValueMap.itemSelectionParameters.required=Item Selection Parameter value is required.
affinityGroup.affinityGroupValueMap.itemSelectionParameters.invalid=Item Selection Parameter value must be of Type: {2}
affinityGroup.affinityGroupValueMap.itemSelectionParameters.invalid.selection=Item Selection Parameter value is not a valid selection from the list.
affinityGroup.affinityGroupValueMap.itemSelectionParameters.length.max=Item Selection Parameter value exceeds maximum length of {2} characters.
affinityGroup.affinityGroupValueMap.itemSelectionParameters.parseable.number=Item Selection Parameter value must be a number of Type: {2}
affinityGroup.affinityGroupValueMap.itemSelectionParameters.out.of.range=Item Selection Parameter value {3} falls outside the range constraints {6} declared in the algorithm parameter for Type: {2}

version.format=Version number should be in the format X.Y
version.majorminor.format=Major version must be > 0; Minor version must be 0 <= x <= 9

# general
assessmentId.required=Assessment Id is required.
bind.exception=Application Error check form and try again.
invalid.format="{1}" is an invalid format for field "{0}"
unexpected.error=Unknown application error
invalid.jaxb.context=Developer application error please contact support
bind.exception=Error binding data on server -- please check format.
multipart.exception=Invalid file or no file uploaded.
search.criteria.invalid.wildcard=Invalid wildcard search filter.
publisher.name.required=Publisher name is required.
blueprintReferenceType.required=BP Reference Type is required.
blueprintReferenceId.required=BP Reference is required.
blueprintReferenceId.notfound=BP Reference Type of {2} specified but BP Reference was not found within Assessment.
cannot.be.altered.assessment.locked=Data cannot be altered: assessment locked for publishing.
invalid.assessment.child.annotation.configuration=A service method for an assessment child object is not properly configured for locked assessment checking.
unsuccessful.clone=Object clone unsuccessful.
tib.encoding.exception=Error encoding TIB request.
