/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.domain;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.not;
import static org.hamcrest.MatcherAssert.assertThat;

import java.util.Set;

import org.junit.Test;

import com.google.common.collect.ImmutableSet;

public class PublicationTest {

    @Test
    public void publisherComparatorTest() {
        Publication publisher = buildPublication("id1", "publisher1", "subject1", "publication1", "tenant1", ImmutableSet.of("subject1"));
        Publication publisher2 = buildPublication("id1", "publisher1", "subject1", "publication1", "tenant1", ImmutableSet.of("subject1"));
        Publication publisher3 = buildPublication("id2", "publisher1", "subject1", "publication1", "tenant1", ImmutableSet.of("subject1"));
        Publication publisher4 = buildPublication("id1", "publisher2", "subject1", "publication1", "tenant1", ImmutableSet.of("subject1"));
        Publication publisher5 = buildPublication("id1", "publisher1", "subject2", "publication1", "tenant1", ImmutableSet.of("subject1"));
        Publication publisher6 = buildPublication("id1", "publisher1", "subject1", "publication2", "tenant1", ImmutableSet.of("subject1"));
        Publication publisher7 = buildPublication("id1", "publisher1", "subject1", "publication1", "tenant2", ImmutableSet.of("subject1"));
        Publication publisher8 = buildPublication("id1", "publisher1", "subject1", "publication1", "tenant2", ImmutableSet.of("subject2"));

        assertThat(publisher, is(equalTo(publisher2)));
        assertThat(publisher, is(not(equalTo(publisher3))));
        assertThat(publisher, is(not(equalTo(publisher4))));
        assertThat(publisher, is(not(equalTo(publisher5))));
        assertThat(publisher, is(not(equalTo(publisher6))));
        assertThat(publisher, is(not(equalTo(publisher7))));
        assertThat(publisher, is(not(equalTo(publisher8))));
    }

    private static Publication buildPublication(String id, String csPublisherKey, String csSubjectKey, String csPublicationKey, String tenantId, Set<String> subjectIds) {
        Publication publication = new Publication();
        publication.setId(id);
        publication.setCoreStandardsPublisherKey(csPublisherKey);
        publication.setCoreStandardsSubjectKey(csSubjectKey);
        publication.setCoreStandardsPublicationKey(csPublicationKey);
        publication.setTenantId(tenantId);
        publication.setSubjectIds(subjectIds);
        return publication;
    }

}
