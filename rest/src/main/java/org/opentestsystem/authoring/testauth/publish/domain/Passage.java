/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.publish.domain;

import java.util.List;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.ToStringStyle;

public class Passage {

    private String fileName;
    private Identifier identifier;
    private List<Property> propertyList;

    public Passage() {
        // required for MOXy/jaxb
    }

    public Passage(final String fileName, final Identifier identifier) {
        this.fileName = fileName;
        this.identifier = identifier;
    }

    public String getFileName() {
        return this.fileName;
    }

    public void setFileName(final String fileName) {
        this.fileName = fileName;
    }

    public Identifier getIdentifier() {
        return this.identifier;
    }

    public void setIdentifier(final Identifier identifier) {
        this.identifier = identifier;
    }

    public List<Property> getPropertyList() {
        return this.propertyList;
    }

    public void setPropertyList(final List<Property> propertyList) {
        this.propertyList = propertyList;
    }

    @Override
    public boolean equals(final Object obj) {
        return EqualsBuilder.reflectionEquals(this, obj);
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this, ToStringStyle.SHORT_PREFIX_STYLE);
    }

    @Override
    public int hashCode() {
        return HashCodeBuilder.reflectionHashCode(this);
    }
}
