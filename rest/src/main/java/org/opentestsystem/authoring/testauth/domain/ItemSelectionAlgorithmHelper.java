/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.domain;

import com.google.common.base.Function;
import com.google.common.base.Predicate;

public final class ItemSelectionAlgorithmHelper {

    private ItemSelectionAlgorithmHelper() {
        // do not instantiate
    }

    protected static final Predicate<ItemSelectionAlgorithmParameter> ITEM_SELECTION_PARAM_SCALAR = new Predicate<ItemSelectionAlgorithmParameter>() {
        @Override
        public boolean apply(final ItemSelectionAlgorithmParameter itemSelectionAlgorithmParameter) {
            return itemSelectionAlgorithmParameter != null && itemSelectionAlgorithmParameter.getItemSelectionPurpose() != null
                    && itemSelectionAlgorithmParameter.getItemSelectionPurpose().equals(ItemSelectionPurpose.SCALAR);
        }
    };

    // better to be explicit than to rely upon Predicates.not, as another purpose may emerge
    protected static final Predicate<ItemSelectionAlgorithmParameter> ITEM_SELECTION_PARAM_BLUEPRINT = new Predicate<ItemSelectionAlgorithmParameter>() {
        @Override
        public boolean apply(final ItemSelectionAlgorithmParameter itemSelectionAlgorithmParameter) {
            return itemSelectionAlgorithmParameter != null && itemSelectionAlgorithmParameter.getItemSelectionPurpose() != null
                    && itemSelectionAlgorithmParameter.getItemSelectionPurpose().equals(ItemSelectionPurpose.BLUEPRINT);
        }
    };

    public static final Function<ItemSelectionAlgorithmParameter, String> ISA_PARAMETER_NAME_TRANSFORMER = new Function<ItemSelectionAlgorithmParameter, String>() {
        @Override
        public String apply(final ItemSelectionAlgorithmParameter p) {
            return p.getParameterName();
        }
    };

    public static final Function<ItemSelectionAlgorithmParameter, String> ISA_PARAMETER_DEFAULT_VALUE_TRANSFORMER = new Function<ItemSelectionAlgorithmParameter, String>() {
        @Override
        public String apply(final ItemSelectionAlgorithmParameter p) {
            return p.getDefaultValue();
        }
    };
}
