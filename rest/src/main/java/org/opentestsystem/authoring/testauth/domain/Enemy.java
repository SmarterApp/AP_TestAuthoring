/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.domain;

import java.io.Serializable;
import java.util.Arrays;

import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.NotBlank;
import org.springframework.data.annotation.Transient;
import org.springframework.data.mongodb.core.index.CompoundIndex;
import org.springframework.data.mongodb.core.index.CompoundIndexes;
import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@Document
@JsonIgnoreProperties(ignoreUnknown = true)
@CompoundIndexes(value = { @CompoundIndex(name = "enemy_indx", def = "{'assessmentId':1, 'objectId1':1, 'objectId2':1}", unique = true) })
public class Enemy extends AssessmentChild implements Serializable, TenantedByAssessment {
    private static final long serialVersionUID = -5083809692769332420L;

    @NotBlank(message = "enemy.objectId1.required")
    private String objectId1;

    @NotNull(message = "enemy.objectType1.required")
    private EnemyType objectType1;

    @NotBlank(message = "enemy.objectId2.required")
    private String objectId2;

    @NotNull(message = "enemy.objectType2.required")
    private EnemyType objectType2;

    private String[] objectIdSearch; // contains objectId1 and objectId2 for searching both at once functionality

    @Transient
    private Object object1; // could be an Item (tibIdentifier), ItemGroup, or Passage

    @Transient
    private Object object2; // could be an Item (tibIdentifier), ItemGroup, or Passage

    public String getObjectId1() {
        return this.objectId1;
    }

    public void setObjectId1(final String objId1) {
        this.objectId1 = objId1;
    }

    public EnemyType getObjectType1() {
        return this.objectType1;
    }

    public void setObjectType1(final EnemyType objType1) {
        this.objectType1 = objType1;
    }

    public String getObjectId2() {
        return this.objectId2;
    }

    public void setObjectId2(final String objId2) {
        this.objectId2 = objId2;
    }

    public EnemyType getObjectType2() {
        return this.objectType2;
    }

    public void setObjectType2(final EnemyType objType2) {
        this.objectType2 = objType2;
    }

    public String[] getObjectIdSearch() {
        String[] rval = null;
        if (this.objectIdSearch != null) {
            rval = this.objectIdSearch.clone();
        }
        return rval;
    }

    public void setObjectIdSearch(final String[] objectIdSearchArray) {
        if (objectIdSearchArray == null) {
            this.objectIdSearch = null;
        } else {
            this.objectIdSearch = Arrays.copyOf(objectIdSearchArray, objectIdSearchArray.length);
        }
    }

    public Object getObject1() {
        return this.object1;
    }

    public void setObject1(final Object obj1) {
        this.object1 = obj1;
    }

    public Object getObject2() {
        return this.object2;
    }

    public void setObject2(final Object obj2) {
        this.object2 = obj2;
    }
}
