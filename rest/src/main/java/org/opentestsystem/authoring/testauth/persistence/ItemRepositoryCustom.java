/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.persistence;

import java.util.List;

import org.opentestsystem.authoring.testauth.domain.Item;
import org.opentestsystem.authoring.testauth.domain.search.ItemSearchRequest;
import org.opentestsystem.shared.search.domain.SearchResponse;

/**
 * Interface for Item mongoDb repository.
 */
public interface ItemRepositoryCustom {

    /**
     * Finds the first 20 distinct (based on 'tibIdentifier' field) items by assessment while filtering
     * by searchVal (tibIdentifier/description). Items will be soreted by tibIdentifier field.
     * 
     * @param assessmentId - assessment to search items for
     * @param searchVal - a string to match the Item tibIdentifier/description on (NULL = any tibIdentifier/description)
     * @return List of Item objects.
     */

    long findCountByAssessmentId(String assessmentId);

    List<Item> findAllBySegmentId(String segmentId);

    List<Item> findAllByItemGroupId(String itemGroupId);

    List<Item> findAllByFormPartitionId(String formPartitionId);

    List<Item> findAllByAffinityGroupId(String affinityGroupId);

    SearchResponse<Item> search(ItemSearchRequest searchRequest);

    List<Item> findFirst20DistinctItemsByAssessmentIdAndSearchVal(String assessmentId, String searchVal);

    long searchForItemCounts(ItemSearchRequest searchRequest);

}
