/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.domain;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.not;
import static org.hamcrest.MatcherAssert.assertThat;

import java.util.HashMap;

import org.junit.Test;

public class AffinityGroupTest {

    @Test
    public void equalsTest() {
        final AffinityGroup expected = createDummyAffinityGroup();
        final AffinityGroup actual = createDummyAffinityGroup();
        final AffinityGroup unexpected = createDummyAffinityGroup();
        unexpected.setAssessmentId("no-assess-id");

        assertThat(actual, is(equalTo(expected)));
        assertThat(actual, is(not(equalTo(unexpected))));
    }

    @Test
    public void toStringTest() {
        final AffinityGroup expected = createDummyAffinityGroup();
        final AffinityGroup actual = createDummyAffinityGroup();

        assertThat(actual.toString(), is(equalTo(expected.toString())));
    }

    @Test
    public void hashcodeTest() {
        final AffinityGroup expected = createDummyAffinityGroup();
        final AffinityGroup actual = createDummyAffinityGroup();

        assertThat(actual.hashCode(), is(equalTo(expected.hashCode())));
    }

    @Test
    public void getMasterAffinityGroupValueTest() {
        final AffinityGroup affinityGroup = createDummyAffinityGroup();

        assertThat(affinityGroup.getAffinityGroupValueMap().get("segment1"), is(equalTo(new AffinityGroupValue(1, 2, 3, 4))));
        assertThat(affinityGroup.getAffinityGroupValueMap().get("segment2"), is(equalTo(new AffinityGroupValue(1, 2, 3, 4))));
        assertThat(affinityGroup.getMasterAffinityGroupValue(), is(equalTo(new AffinityGroupValue(2, 4, 6, 8))));
    }

    public static AffinityGroup createDummyAffinityGroup() {
        final AffinityGroup ag = new AffinityGroup();
        ag.setId("1");
        ag.setAssessmentId("1");
        ag.setGroupName("group-1");
        ag.setActive(true);

        ag.setAffinityGroupValueMap(new HashMap<String, AffinityGroupValue>());
        ag.getAffinityGroupValueMap().put("segment1", new AffinityGroupValue(1, 2, 3, 4));
        ag.getAffinityGroupValueMap().put("segment2", new AffinityGroupValue(1, 2, 3, 4));

        return ag;
    }
}
