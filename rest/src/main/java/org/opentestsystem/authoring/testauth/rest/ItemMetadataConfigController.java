/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.rest;

import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;

import org.opentestsystem.authoring.testauth.domain.ItemMetadataConfig;
import org.opentestsystem.authoring.testauth.service.ItemMetadataConfigService;
import org.opentestsystem.shared.web.AbstractRestController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.security.access.annotation.Secured;
import org.springframework.security.access.prepost.PostAuthorize;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;

/**
 * Rest Services for Item Metadata Config data
 */
@Controller
public class ItemMetadataConfigController extends AbstractRestController {

    @Autowired
    private ItemMetadataConfigService itemMetadataConfigService;

    @RequestMapping(value = "/itemMetadataConfig/assessmentId/{assessmentId}", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
    @Secured({ "ROLE_Pool Read" })
    @PostAuthorize("hasPermission(returnObject, 'ROLE_Pool Read')")
    @ResponseBody
    public ItemMetadataConfig findItemMetadataConfigByAssessmentId(@PathVariable final String assessmentId, final HttpServletResponse response) {
        return this.itemMetadataConfigService.getItemMetadataConfigByAssessment(assessmentId);
    }

    @ResponseStatus(HttpStatus.CREATED)
    @RequestMapping(value = "/itemMetadataConfig", method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
    @Secured({ "ROLE_Pool Modify" })
    @PreAuthorize("hasPermission(#itemMetadataConfig, 'ROLE_Pool Modify')")
    @ResponseBody
    public ItemMetadataConfig createItemMetadataConfig(@RequestBody @Valid final ItemMetadataConfig itemMetadataConfig, final HttpServletResponse response) {
        return this.itemMetadataConfigService.saveItemMetadataConfig(itemMetadataConfig);
    }

    @ResponseStatus(HttpStatus.OK)
    @RequestMapping(value = "/itemMetadataConfig/{itemMetadataConfigId}", method = RequestMethod.PUT, consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
    @Secured({ "ROLE_Pool Modify" })
    @PreAuthorize("hasPermission(#itemMetadataConfig, 'ROLE_Pool Modify')")
    @ResponseBody
    public ItemMetadataConfig updateItemMetadataConfig(@PathVariable final String itemMetadataConfigId, @RequestBody @Valid final ItemMetadataConfig itemMetadataConfig,
            final HttpServletResponse response) {
        return this.itemMetadataConfigService.saveItemMetadataConfig(itemMetadataConfig);
    }
}
