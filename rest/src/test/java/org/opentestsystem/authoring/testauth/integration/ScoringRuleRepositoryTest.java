/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.integration;

import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.CoreMatchers.notNullValue;
import static org.hamcrest.CoreMatchers.nullValue;
import static org.hamcrest.MatcherAssert.assertThat;

import org.junit.Test;
import org.opentestsystem.authoring.testauth.domain.ScoringRule;
import org.opentestsystem.authoring.testauth.persistence.ScoringRuleRepository;
import org.opentestsystem.authoring.testauth.rest.AbstractRestEmbeddedMongoTest;
import org.springframework.beans.factory.annotation.Autowired;

public class ScoringRuleRepositoryTest extends AbstractRestEmbeddedMongoTest {

    @Autowired
    private ScoringRuleRepository scoringRuleRepository;

    @Test
    public void saveScoringRuleTest() {
        final ScoringRule scoringRule = PODAM_FACTORY.manufacturePojo(ScoringRule.class);
        scoringRule.setOrder(Integer.valueOf(1));
        final ScoringRule savedScoringRule = this.scoringRuleRepository.save(scoringRule);
        assertThat(savedScoringRule, is(notNullValue()));
        assertThat(savedScoringRule.getId(), is(notNullValue()));
    }

    @Test
    public void findScoringRuleTest() {
        final ScoringRule scoringRule = PODAM_FACTORY.manufacturePojo(ScoringRule.class);
        scoringRule.setOrder(Integer.valueOf(1));
        final ScoringRule savedScoringRule = this.scoringRuleRepository.save(scoringRule);
        assertThat(savedScoringRule, is(notNullValue()));
        final ScoringRule foundScoringRule = this.scoringRuleRepository.findOne(savedScoringRule.getId());
        assertThat(savedScoringRule.getId(), is(equalTo(foundScoringRule.getId())));
        assertThat(savedScoringRule, is(equalTo(foundScoringRule)));
    }

    @Test
    public void removeScoringRuleTest() {
        final ScoringRule scoringRule = PODAM_FACTORY.manufacturePojo(ScoringRule.class);
        scoringRule.setOrder(Integer.valueOf(1));
        final ScoringRule savedScoringRule = this.scoringRuleRepository.save(scoringRule);
        this.scoringRuleRepository.delete(scoringRule);
        final ScoringRule foundScoringRule = this.scoringRuleRepository.findOne(savedScoringRule.getId());
        assertThat(foundScoringRule, is(nullValue()));
    }
}
