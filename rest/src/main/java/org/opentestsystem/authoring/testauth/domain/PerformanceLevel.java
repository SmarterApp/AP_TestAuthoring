/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.domain;

import java.io.Serializable;
import java.util.List;

import javax.persistence.Transient;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotBlank;
import org.springframework.data.mongodb.core.index.CompoundIndex;
import org.springframework.data.mongodb.core.index.CompoundIndexes;
import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@Document
@JsonIgnoreProperties(ignoreUnknown = true)
@CompoundIndexes(value = { @CompoundIndex(name = "performance_level_indx", def = "{'assessmentId':1, 'blueprintReferenceId':1}", unique = true) })
public class PerformanceLevel extends AssessmentChild implements Serializable, TenantedByAssessment {
    private static final long serialVersionUID = -4924488754102777826L;

    // indicating Assessment, Segment, Affinity Group, or Standard Key
    @NotNull(message = "blueprintReferenceType.required")
    private BlueprintReferenceType blueprintReferenceType;

    // value will be assessment.id, segment.id, affinityGroup.id, or blueprintElement.id
    @NotBlank(message = "blueprintReferenceId.required")
    private String blueprintReferenceId;

    @Transient
    private String blueprintReferenceName;

    @Valid
    @NotNull(message = "performanceLevel.performanceLevelValues.size")
    @Size(min = 2, message = "performanceLevel.performanceLevelValues.size")
    private List<PerformanceLevelValue> performanceLevelValues;

    public BlueprintReferenceType getBlueprintReferenceType() {
        return this.blueprintReferenceType;
    }

    public void setBlueprintReferenceType(final BlueprintReferenceType aBlueprintReferenceType) {
        this.blueprintReferenceType = aBlueprintReferenceType;
    }

    public String getBlueprintReferenceId() {
        return this.blueprintReferenceId;
    }

    public void setBlueprintReferenceId(final String aBlueprintReferenceId) {
        this.blueprintReferenceId = aBlueprintReferenceId;
    }

    public String getBlueprintReferenceName() {
        return this.blueprintReferenceName;
    }

    public void setBlueprintReferenceName(final String aBlueprintReferenceName) {
        this.blueprintReferenceName = aBlueprintReferenceName;
    }

    public List<PerformanceLevelValue> getPerformanceLevelValues() {
        return this.performanceLevelValues;
    }

    public void setPerformanceLevelValues(final List<PerformanceLevelValue> performanceLevelValueList) {
        this.performanceLevelValues = performanceLevelValueList;
    }
}
