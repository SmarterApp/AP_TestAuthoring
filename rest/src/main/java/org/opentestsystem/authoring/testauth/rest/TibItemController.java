/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.rest;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

//import org.opentestsystem.authoring.testauth.config.TestAuthUtil;
import org.opentestsystem.authoring.testauth.service.TibItemService;
import org.opentestsystem.authoring.testitembank.client.TibItemMetadata;
import org.opentestsystem.authoring.testitembank.client.TibItemMetadataValue;
import org.opentestsystem.shared.search.domain.SearchResponse;
import org.opentestsystem.shared.web.AbstractRestController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.MediaType;
import org.springframework.security.access.annotation.Secured;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.common.collect.Maps;

/**
 * Used to retrieve help messages
 */
@Controller
public class TibItemController extends AbstractRestController {

    @Autowired
    private TibItemService tibItemService;
    
    @Value("${testauth.itembank}")
    private String itemBank;

    @RequestMapping(value = "/tibitem", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
    @Secured({ "ROLE_Test Read" })
    @PreAuthorize("hasPermission(#tenantId, 'ROLE_Pool Read')")
    @ResponseBody
    public String getItems(final HttpServletRequest request, final HttpServletResponse response, @RequestParam(required = true) final String tenantId) {

      final Map<String, String[]> parameterMap = Maps.newHashMap(request.getParameterMap());
      parameterMap.put ("itemBank", new String[] {this.itemBank});
      return this.tibItemService.getItems(parameterMap);
    }
    
    @RequestMapping(value = "/tibitemMetadata", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
    @Secured({ "ROLE_Test Read" })
    @PreAuthorize("hasPermission(#tenantId, 'ROLE_Pool Read')")
    @ResponseBody
    public TibItemMetadata getItemMetadataByTenantId(@RequestParam(required = true) final String tenantId) {
        return this.tibItemService.getItemMetadataByTenantId(tenantId);
    }

    @RequestMapping(value = "/tibitemMetadata/values", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)
    @Secured({ "ROLE_Test Read" })
    @PreAuthorize("hasPermission(#tenantId, 'ROLE_Pool Read')")
    @ResponseBody
    public SearchResponse<TibItemMetadataValue> searchItemMetadataValues(final HttpServletRequest request, @RequestParam(required = true) final String tenantId) {
        return this.tibItemService.searchItemMetadataValues(request.getParameterMap());
    }
}
