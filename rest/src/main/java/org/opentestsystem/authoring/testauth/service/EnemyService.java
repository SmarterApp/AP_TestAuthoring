/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.service;

import java.util.List;
import java.util.Map;

import org.opentestsystem.authoring.testauth.domain.Enemy;
import org.opentestsystem.shared.search.domain.SearchResponse;

public interface EnemyService {

    Enemy saveEnemy(String enemyId, Enemy enemy);

    void removeEnemy(String enemyId);

    void removeEnemiesByAssessmentId(String assessmentId);

    Enemy getEnemy(String enemyId);

    List<Enemy> getEnemies();

    List<Enemy> getEnemiesByAssessmentId(String assessmentId);

    List<Enemy> getEnemiesByAssessmentIdAndObjectId1(String assessmentId, String objectId1);

    List<Enemy> getEnemiesByAssessmentIdAndObjectId2(String assessmentId, String objectId2);

    SearchResponse<Enemy> searchEnemies(Map<String, String[]> requestMap);

    List<Enemy> saveEnemyList(List<Enemy> enemyList);

    /**
     * Returns true if there is already an enemy in the database which belongs to the same assessment as the given enemy,
     * and which is correlated between the same 2 items (regardless of order of objectId1 or objectId2)
     * 
     * @param enemy
     * @return true if given enemy already exists in the database with a different id
     */
    boolean isDuplicateOfExistingEnemy(Enemy enemy);
}
