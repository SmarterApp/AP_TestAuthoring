/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.authoring.testauth.domain;

import java.io.Serializable;

import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.NotBlank;
import org.springframework.data.annotation.Transient;
import org.springframework.data.mongodb.core.index.CompoundIndex;
import org.springframework.data.mongodb.core.index.CompoundIndexes;
import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@Document
@JsonIgnoreProperties(ignoreUnknown = true)
@CompoundIndexes(value = { @CompoundIndex(name = "assessment_grp_name_indx", def = "{'assessmentId':1, 'groupName':1, 'locationId':1}", unique = true) })
public class ItemGroup extends AssessmentChild implements Serializable, TenantedByAssessment {

    private static final long serialVersionUID = -2895352979117564277L;
    private static final int NAME_LEN_MAX = 60;

    @NotNull(message = "itemgroup.itemgrouplocation.required")
    private ItemGroupLocationType locationType;

    @NotNull(message = "itemgroup.itemgrouplocation.required")
    private String locationId;

    @NotBlank(message = "itemgroup.groupname.required")
    @Size(max = NAME_LEN_MAX, message = "itemgroup.groupname.length")
    private String groupName;

    @NotNull(message = "itemgroup.maxresponses.required")
    @Min(value = 0, message = "itemgroup.maxresponses.nonnegative")
    private Integer maxResponses;

    @NotNull(message = "itemgroup.maxitems.required")
    @Min(value = 0, message = "itemgroup.maxitems.nonnegative")
    private Integer maxitems;

    private String passageId;
    private String passageName;

    @Transient
    private Segment segment;

    @Transient
    private FormPartition formPartition;

    public ItemGroupLocationType getLocationType() {
        return this.locationType;
    }

    public void setLocationType(final ItemGroupLocationType aLocationType) {
        this.locationType = aLocationType;
    }

    public String getLocationId() {
        return this.locationId;
    }

    public void setLocationId(final String aLocationId) {
        this.locationId = aLocationId;
    }

    public Integer getMaxResponses() {
        return this.maxResponses;
    }

    public void setMaxResponses(final Integer aMaxResponses) {
        this.maxResponses = aMaxResponses;
    }

    public Integer getMaxitems() {
        return this.maxitems;
    }

    public void setMaxitems(final Integer aMaxitems) {
        this.maxitems = aMaxitems;
    }

    public String getPassageId() {
        return this.passageId;
    }

    public void setPassageId(final String aPassageId) {
        this.passageId = aPassageId;
    }

    public String getPassageName() {
        return this.passageName;
    }

    public void setPassageName(final String aPassageName) {
        this.passageName = aPassageName;
    }

    public String getGroupName() {
        return this.groupName;
    }

    public void setGroupName(final String aGroupName) {
        this.groupName = aGroupName;
    }

    public Segment getSegment() {
        return this.segment;
    }

    public void setSegment(final Segment aSegment) {
        this.segment = aSegment;
    }

    public FormPartition getFormPartition() {
        return this.formPartition;
    }

    public void setFormPartition(final FormPartition aFormPartition) {
        this.formPartition = aFormPartition;
    }
}
